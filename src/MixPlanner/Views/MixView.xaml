<UserControl x:Class="MixPlanner.Views.MixView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:mp="clr-namespace:MixPlanner.ViewModels"
             xmlns:dd="clr-namespace:GongSolutions.Wpf.DragDrop;assembly=GongSolutions.Wpf.DragDrop"
             xmlns:i="clr-namespace:System.Windows.Interactivity;assembly=System.Windows.Interactivity"
             xmlns:cmd="clr-namespace:GalaSoft.MvvmLight.Command;assembly=GalaSoft.MvvmLight.Extras.WPF4"
             xmlns:views="clr-namespace:MixPlanner.Views"
             mc:Ignorable="d"
             d:DesignHeight="300"
             d:DesignWidth="530"
             d:DataContext="{d:DesignInstance mp:MixViewModel}">
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="50" />
            <RowDefinition Height="*" />
        </Grid.RowDefinitions>
        
        <views:MixToolBar Grid.Row="0" 
                          DataContext="{Binding ToolBar}" />
        
        <ListView Grid.Row="1"
                  ItemsSource="{Binding Items}"
                  dd:DragDrop.IsDropTarget="True"
                  dd:DragDrop.DropHandler="{Binding}"
                  SelectedItem="{Binding SelectedItem, Mode=TwoWay}"
                  SelectionMode="Extended"
                  SelectionChanged="OnSelectionChanged"
                  ScrollViewer.CanContentScroll="False"
                  ScrollViewer.HorizontalScrollBarVisibility="Hidden"
                  VerticalAlignment="Stretch">
            <ListView.InputBindings>
                <KeyBinding Key="F2"
                            CommandParameter="{Binding SelectedTrack}"
                            Command="{Binding EditTrackCommand}" />
                <KeyBinding Key="Delete"
                            CommandParameter="{Binding SelectedItems}"
                            Command="{Binding RemoveCommand}" />
                <KeyBinding Key="Back"
                            CommandParameter="{Binding SelectedItems}"
                            Command="{Binding RemoveCommand}" />
                <KeyBinding Key="Space"
                            CommandParameter="{Binding SelectedTrack}"
                            Command="{Binding PlayPauseCommand}" />
                <KeyBinding Key="Return"
                            CommandParameter="{Binding SelectedTrack}"
                            Command="{Binding PlayPauseCommand}" />
                <KeyBinding Key="Enter"
                            CommandParameter="{Binding SelectedTrack}"
                            Command="{Binding PlayPauseCommand}" />
            </ListView.InputBindings>

            <ListView.ItemContainerStyle>
                <Style TargetType="ListViewItem">
                    <Setter Property="HorizontalAlignment"
                            Value="Center" />
                </Style>
            </ListView.ItemContainerStyle>

            <ListView.ItemTemplate>
                <DataTemplate>
                    <views:MixItemView DataContext="{Binding}" />
                </DataTemplate>
            </ListView.ItemTemplate>


            <ListView.ContextMenu>
                <ContextMenu>
                    <MenuItem Header="{Binding Path=PlacementTarget.SelectedItem.Track, RelativeSource={RelativeSource AncestorType=ContextMenu}, Converter={StaticResource PlayPauseCommandLabelConverter}}"
                              Visibility="{Binding Path=PlacementTarget.DataContext.HasSingleItemSelected, RelativeSource={RelativeSource AncestorType=ContextMenu}, Converter={StaticResource BooleanToVisibilityConverter}}"
                              InputGestureText="Space"
                              Command="{Binding PlayPauseCommand}"
                              CommandTarget="{Binding Path=PlacementTarget, RelativeSource={RelativeSource AncestorType=ContextMenu}}"
                              CommandParameter="{Binding Path=PlacementTarget.SelectedItem.Track, RelativeSource={RelativeSource AncestorType=ContextMenu}}" />
                    <MenuItem Header="Reset Pitch"
                              Command="{Binding ResetPlaybackSpeedCommand}"
                              CommandTarget="{Binding Path=PlacementTarget, RelativeSource={RelativeSource AncestorType=ContextMenu}}"
                              CommandParameter="{Binding Path=PlacementTarget.DataContext.SelectedItems, RelativeSource={RelativeSource AncestorType=ContextMenu}}" />
                    <MenuItem Header="Auto Adjust Pitch"
                              Command="{Binding AutoAdjustPitchCommand}"
                              CommandTarget="{Binding Path=PlacementTarget, RelativeSource={RelativeSource AncestorType=ContextMenu}}"
                              CommandParameter="{Binding Path=PlacementTarget.DataContext.SelectedItems, RelativeSource={RelativeSource AncestorType=ContextMenu}}" />
                    <MenuItem Header="Shuffle"
                              Command="{Binding ShuffleCommand}"
                              Visibility="{Binding Path=PlacementTarget.DataContext.HasMultipleItemsSelected, RelativeSource={RelativeSource AncestorType=ContextMenu}, Converter={StaticResource BooleanToVisibilityConverter}}"
                              CommandTarget="{Binding Path=PlacementTarget, RelativeSource={RelativeSource AncestorType=ContextMenu}}"
                              CommandParameter="{Binding Path=PlacementTarget.DataContext.SelectedItems, RelativeSource={RelativeSource AncestorType=ContextMenu}}" />
                    <MenuItem Header="Auto Mix"
                              Command="{Binding AutoMixCommand}"
                              Visibility="{Binding Path=PlacementTarget.DataContext.HasMultipleItemsSelected, RelativeSource={RelativeSource AncestorType=ContextMenu}, Converter={StaticResource BooleanToVisibilityConverter}}"
                              CommandTarget="{Binding Path=PlacementTarget, RelativeSource={RelativeSource AncestorType=ContextMenu}}"
                              CommandParameter="{Binding Path=PlacementTarget.DataContext.SelectedItems, RelativeSource={RelativeSource AncestorType=ContextMenu}}" />
                    <Separator />
                    <MenuItem Header="Copy Mixcloud pre-written tracklist to clipboard"
                              Command="{Binding CopyMixcloudTracklistCommand}"
                              CommandParameter="{Binding Path=Mix}" />
                    <Separator />
                    <MenuItem Header="Edit"
                              Visibility="{Binding Path=PlacementTarget.DataContext.HasSingleItemSelected, RelativeSource={RelativeSource AncestorType=ContextMenu}, Converter={StaticResource BooleanToVisibilityConverter}}"
                              Command="{Binding EditTrackCommand}"
                              InputGestureText="F2"
                              CommandTarget="{Binding Path=PlacementTarget, RelativeSource={RelativeSource AncestorType=ContextMenu}}"
                              CommandParameter="{Binding Path=PlacementTarget.SelectedItem.Track, RelativeSource={RelativeSource AncestorType=ContextMenu}}" />
                    <MenuItem Header="Show in Explorer"
                              Visibility="{Binding Path=PlacementTarget.DataContext.HasSingleItemSelected, RelativeSource={RelativeSource AncestorType=ContextMenu}, Converter={StaticResource BooleanToVisibilityConverter}}"
                              Command="{Binding ShowInExplorerCommand}"
                              InputGestureText="F2"
                              CommandTarget="{Binding Path=PlacementTarget, RelativeSource={RelativeSource AncestorType=ContextMenu}}"
                              CommandParameter="{Binding Path=PlacementTarget.SelectedItem.Track, RelativeSource={RelativeSource AncestorType=ContextMenu}}" />
                    <MenuItem Header="Remove"
                              InputGestureText="Del"
                              Command="{Binding RemoveCommand}"
                              CommandTarget="{Binding Path=PlacementTarget, RelativeSource={RelativeSource AncestorType=ContextMenu}}"
                              CommandParameter="{Binding Path=PlacementTarget.DataContext.SelectedItems, RelativeSource={RelativeSource AncestorType=ContextMenu}}" />
                </ContextMenu>
            </ListView.ContextMenu>
        </ListView>
    </Grid>
</UserControl>
